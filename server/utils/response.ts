/*\n * Author: Cascade\n * Date: October 14, 2025 and 7:23pm UTC-04:00\n * PURPOSE: This utility file provides standardized response formatting for API endpoints, including success, error, and model response helpers. It integrates with Express responses and touches response patterns across the application.\n * SRP/DRY check: Pass - Focused solely on response utilities. Response formatting patterns were repeated in routes; this centralizes them. Reviewed existing response code to ensure no duplication.\n */\nimport { Response } from "express";\n\nexport class ApiResponse {\n  static success(res: Response, data: any, statusCode = 200) {\n    return res.status(statusCode).json(data);\n  }\n\n  static error(res: Response, message: string, statusCode = 500, details?: any) {\n    return res.status(statusCode).json({\n      error: message,\n      ...(details && { details })\n    });\n  }\n\n  static modelResponse(res: Response, result: any) {\n    return res.json({\n      content: result.content,\n      reasoning: result.reasoning,\n      responseTime: result.responseTime,\n      tokenUsage: result.tokenUsage,\n      cost: result.cost,\n      modelConfig: result.modelConfig\n    });\n  }\n\n  static streamingEvent(res: Response, event: string, data: any) {\n    res.write(`data: ${JSON.stringify(data)}\n\n`);\n  }\n}
